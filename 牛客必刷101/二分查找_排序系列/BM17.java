package 牛客必刷101.二分查找_排序系列;
//二分查找-I

//题目的主要信息:
//●给定一个元素升序的、无重复数字的整型数组nums和一个目标值target
//●找到目标值的下标.
//●如果找不到返回-1.
//方法-:二分法(推荐使用)
//具体做法:
//既然数组是升序且无重复的，可以使用二分法。
//●step1: 从数组首尾开始，每次取中点值。
//●step2:如果中间值等于目标即找到了，可返回下标，如果中点值大于目标，说明中点以后的都大于目标，因此目
//标在中点左半区间，如果中点值小于目标，则相反。
//●step3:根据比较进入对应的区间，直到区间左右端相遇，意味着没有找到。
public class BM17 {
    public class Solution {
        public int search (int[] nums, int target) {
            int l = 0;
            int r = nums.length - 1;
            while(l <= r){ //从数组首尾开始，直到二者相遇
                int m = (l + r) / 2; //每次检查中点的值
                if(nums[m] == target)
                    return m;
                if(nums[m] > target) //进入左的区间
                    r = m - 1;
                else //进入右区间
                    l = m + 1;
            }
            return -1; //未找到
        }
    }
}
//复杂度分析:
//●时间复杂度: O(log2n),对长度为n的数组进行二分，最坏情况就是取2的对数
//●空间复杂度: 0(1),无额外空间